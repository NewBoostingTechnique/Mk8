on:
  push:
    branches:
      - main
jobs:
  Build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 18.17.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
            version: 8.6.x

      - name: Compile Code
        run: dotnet publish -r linux-x64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Web.Test
          path: artifacts/publish/Web.Test/release_linux-x64
  
  Test:
    runs-on: ubuntu-24.04
    needs: Build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Web.Test

      - name: Run Tests
        run: >-
          dotnet vstest Mk8.Web.Test.dll
          --Collect:"XPlat Code Coverage"
          -e:Authentication__Google__ClientId=MyClientId
          -e:Authentication__Google__ClientSecret=MyClientSecret

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        run: |
          REPORT_PATH=$(find TestResults -name 'coverage.cobertura.xml')
          reportgenerator \
            -reports:${REPORT_PATH} \
            -targetdir:TestCoverage \
            -reporttypes:Html

      - name: Upload Artifact 'Coverage'
        uses: actions/upload-artifact@v3
        with:
          name: Web.Test Coverage
          path: TestCoverage

        # Then add more tests.
        # Then migrate to Clean Architecture
